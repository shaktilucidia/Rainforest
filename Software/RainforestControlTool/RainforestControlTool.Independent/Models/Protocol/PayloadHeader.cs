using RainforestControlTool.Independent.Enums.Protocol;

namespace RainforestControlTool.Independent.Models.Protocol;

/// <summary>
/// Payload header
/// </summary>
public class PayloadHeader
{
    /// <summary>
    /// Header size in bytes
    /// </summary>
    private const int HeaderSize = 5;
    
    /// <summary>
    /// Sequence ID, random number, generated by host
    /// </summary>
    public UInt32 SequenceId { get; private set; }

    /// <summary>
    /// Payload type
    /// </summary>
    public PayloadType Type { get; private set; }

    public PayloadHeader
    (
        PayloadType type
    )
    {
        SequenceId = (UInt32) new Random().Next();
        Type = type;
    }

    /// <summary>
    /// Generate payload header to be sent to station
    /// </summary>
    public byte[] ToBytes()
    {
        var result = new byte[HeaderSize];

        // 0-3: Sequence ID
        Array.Copy(BitConverter.GetBytes(SequenceId), 0, result, 0, 4);
        
        // 4: Payload type
        result[4] = (byte)Type;
        
        return result;
    }
}